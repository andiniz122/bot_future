# config.py - Configura√ß√µes Unificadas para o Bot Gate.io

# ============ MODO DE SEGURAN√áA ============
# Defina TRUE para ativar as configura√ß√µes ULTRA-SEGURAS.
# Defina FALSE para usar as configura√ß√µes padr√£o (mais flex√≠veis).
ULTRA_SAFE_MODE = False # Altere para True para ativar o modo ultra-seguro
NEWS_API_KEY="ec5a692f312e434e8a34bd25da9f4a19"
BTC_CONTEXT_UPDATE_INTERVAL_MINUTES = 5 # Por exemplo, atualiza o contexto BTC a cada 30 minutos

# ============ CONFIGURA√á√ïES GERAIS DO BOT ============
# Intervalo padr√£o para atualiza√ß√£o de klines e ciclo do bot (em segundos).
# O bot adaptativo pode ajustar isso dinamicamente.
KLINES_UPDATE_INTERVAL_SECONDS = 30 
CYCLE_INTERVAL_SECONDS = 60 # Default cycle interval for the bot's main loop

# N√∫mero m√°ximo de falhas consecutivas antes de ativar o modo de recupera√ß√£o profunda.
MAX_CONSECUTIVE_FAILURES = 3 

# ============ DESCOBERTA DE S√çMBOLOS (Valores Iniciais/Padr√£o) ============
# Estes valores s√£o usados como ponto de partida pelo main.py e data_collector.py.
# O bot adaptativo no main.py os ajustar√° dinamicamente.

# Volume m√≠nimo de 24h em USDT para um s√≠mbolo ser considerado (ponto de partida).
MIN_VOLUME_USDT_FOR_SELECTION = 10_000_000 # 10 milh√µes de USDT

# Valor nocional m√≠nimo de uma ordem para um s√≠mbolo ser considerado.
MIN_NOTIONAL_FOR_SELECTION = 35.0

# N√∫mero m√°ximo de s√≠mbolos a serem analisados/mantidos ativos.
# O bot adaptativo pode ajustar dinamicamente.
MAX_SYMBOLS_TO_ANALYZE = 10

# N√∫mero m√≠nimo de s√≠mbolos ativos que o bot deve sempre tentar monitorar
MIN_ACTIVE_SYMBOLS = 5
# N√∫mero m√°ximo de s√≠mbolos ativos para evitar sobrecarga de processamento e API
MAX_ACTIVE_SYMBOLS = 10

# ============ FALLBACK DE SEGURAN√áA ============
# S√≠mbolos manuais para usar quando a descoberta autom√°tica falha
MANUAL_SYMBOLS = [
    'BTC_USDT', 'ETH_USDT', 'SOL_USDT', 'BNB_USDT',
    'XRP_USDT', 'ADA_USDT', 'MATIC_USDT', 'DOT_USDT',
    'LINK_USDT', 'UNI_USDT', 'LTC_USDT', 'AVAX_USDT'
]

# S√≠mbolos ultra-seguros para modo de recupera√ß√£o (usados no emergency_recovery)
RECOVERY_MODE_SYMBOLS = ['BTC_USDT', 'ETH_USDT']

# S√≠mbolos a serem exclu√≠dos da an√°lise e do trading (geral)
EXCLUDED_SYMBOLS = [] # Default empty, overridden in ULTRA_SAFE_MODE if active

# ============ CRIT√âRIOS DE SINAL (Padr√£o para AdvancedSignalEngine) ============
# Estes s√£o os crit√©rios padr√£o que o AdvancedSignalEngine usar√°,
# mas o `main.py` pode sobrescrev√™-los com base no modo adaptativo.

# Confian√ßa m√≠nima para um sinal ser considerado para execu√ß√£o de trade.
MIN_CONFIDENCE_TO_TRADE = 40.0

# Limiar para considerar um sinal como "muito forte".
MIN_CONFIDENCE_FOR_STRONG_SIGNAL = 60.0 

# R√°cio de volume (volume atual / m√©dia m√≥vel do volume) para um "spike" significativo.
MIN_VOLUME_SPIKE_RATIO = 1.5 

# Percentagem m√≠nima de mudan√ßa de pre√ßo para um sinal ser relevante.
MIN_PRICE_CHANGE_THRESHOLD = 0.5 

# Limiares para RSI oversold e overbought.
MIN_RSI_OVERSOLD = 25 
MAX_RSI_OVERBOUGHT = 75 

# === CONFIGURA√á√ÉO BASE PARA O SIGNAL_ENGINE (STRATEGY_CONFIG) ===
# Este dicion√°rio √© passado para o AdvancedSignalEngine.__init__
# e √© a base para as configura√ß√µes da estrat√©gia, que s√£o ajustadas pelo modo adaptativo.
STRATEGY_CONFIG = {
    'ema_fast': 8,
    'ema_slow': 21,
    'rsi_period': 14,
    'bb_period': 20,
    'bb_std': 2.0,
    'adx_period': 14,
    'volatility_lookback': 50,
    'ml_retrain_interval': 500, 
    'breakout_lookback': 20,
    'scalping_threshold': 0.003, 
    
    # Par√¢metros de risco da estrat√©gia (poder√£o ser sobrescritos pelo PortfolioManager ou ULTRA_SAFE_MODE)
    'max_portfolio_risk': 0.10, # 10% do portf√≥lio
    'max_single_position': 0.02, # 2% do portf√≥lio por posi√ß√£o
    'max_leverage': 10.0, # ajuste de risco.. teste nao tenho certeza
    
    # Par√¢metros de Take Profit/Stop Loss
    'take_profit_ratio': 0.025, # 2.5%
    'stop_loss_ratio': -0.02 # -2%
}


# ============ CONFIGURA√á√ïES DE PORTFOLIO MANAGER & RISCO ============
# Limite m√°ximo de posi√ß√µes que o bot pode abrir concorrentemente.
MAX_CONCURRENT_POSITIONS = 5

# Risco m√°ximo do capital total da carteira em todas as posi√ß√µes abertas (em porcentagem).
MAX_TOTAL_RISK_PERCENT = 30.0

# Risco m√°ximo por trade individual (para c√°lculo de tamanho de posi√ß√£o, em porcentagem).
MAX_RISK_PER_TRADE_PERCENT = 1.0

# Alavancagem m√°xima padr√£o a ser usada se n√£o especificado de outra forma.
MAX_LEVERAGE = 2.0

# Saldo m√≠nimo em USDT para que o bot possa abrir um novo trade.
MIN_BALANCE_FOR_NEW_TRADE = 20.0

# Valor alvo em USDT para uma nova ordem de trade (usado para dimensionamento).
TARGET_USDT_FOR_NEW_TRADE = 10.0

# Configura√ß√µes de SL/TP para o ImprovedSLTPManager (valores padr√£o)
STOP_LOSS_PCT = -2.0
TAKE_PROFIT_PCT = 2.5
TRAILING_STOP_ENABLED = True
BREAKEVEN_ENABLED = True
EMERGENCY_SL_PCT = -3.5
EMERGENCY_TP_PCT = 4.0
TRAILING_STOP_DISTANCE = 1.0
MAX_CLOSE_RETRIES = 3
QUICK_PROFIT_FOR_BREAKEVEN = 1.0


# ============ WEBSOCKET E CLIENTES API ============
WEBSOCKET_ENABLED = True 

# ============ DEBUG E LOGGING ============
DEBUG_MODE = True 
LOG_LEVEL = 'INFO' 

# ============ CONFIGURA√á√ïES DE DADOS ============
# Limite de dados (klines) necess√°rios para an√°lise
KLINES_LIMIT = 200 # Gate.io tipicamente retorna no m√°ximo 200 por requisi√ß√£o

# ============ HOR√ÅRIOS DE OPERA√á√ÉO ============
# Define o hor√°rio de opera√ß√£o do bot em UTC.
# Para operar 24/7, defina start_hour=0, end_hour=23, weekend_trading=True
TRADING_HOURS = {
    'start_hour': 0,         # Come√ßar √†s 0:00 UTC
    'end_hour': 23,          # Parar √†s 23:59 UTC
    'weekend_trading': True  # Operar nos finais de semana
}

# ============ DETEC√á√ÉO DE VOLUME ANORMAL ============
ENABLE_VOLUME_SPIKE_DETECTION = True
# O volume atual deve ser X vezes maior que a m√©dia hist√≥rica para ser considerado um "spike"
VOLUME_SPIKE_MULTIPLIER = 2.0         # Ex: Volume atual 2x maior que a m√©dia
# Quantos dias para calcular o volume m√©dio hist√≥rico para a detec√ß√£o de spike
VOLUME_SPIKE_LOOKBACK_DAYS = 7        # M√©dia dos √∫ltimos 7 dias
# Volume m√≠nimo de 24h para um s√≠mbolo ser sequer considerado para detec√ß√£o de spike
MIN_VOLUME_FOR_SPIKE_CANDIDATE = 1_000_000 # Ex: 1 milh√£o de USDT


# ====================================================================================================
#                          L√ìGICA PARA ATIVAR O MODO ULTRA-SEGURO
# ====================================================================================================
if ULTRA_SAFE_MODE:
    print("\nüõ°Ô∏è ULTRA_SAFE_MODE est√° ATIVO! As configura√ß√µes abaixo est√£o sendo sobrescritas.")
    
    # üí∞ GEST√ÉO DE RISCO ULTRA-CONSERVADORA
    MAX_POSITION_SIZE_PERCENT = 0.5      # 0.5% do saldo por posi√ß√£o
    STOP_LOSS_PERCENT = -0.8             # Stop loss rigoroso a -0.8%
    TAKE_PROFIT_PERCENT = 3.0            # Take profit conservador a +3.0%
    
    # Alinhando com as vari√°veis usadas no main.py
    MAX_CONCURRENT_POSITIONS = 3               # M√°ximo 3 posi√ß√µes abertas por vez
    MAX_TOTAL_RISK_PERCENT = 30.0              # Risco total max de 10% em modo ultra-seguro
    MAX_RISK_PER_TRADE_PERCENT = 0.5           # Max 0.5% risco por trade
    
    EMERGENCY_LOSS_PERCENT = -3.0        # Parada de emerg√™ncia a -3%
    
    # üìä CRIT√âRIOS DE ENTRADA RIGOROSOS
    MIN_CONFIDENCE_TO_TRADE = 75.0       # M√≠nimo 75% de confian√ßa
    MIN_BALANCE_FOR_NEW_TRADE = 100.0    # M√≠nimo 100 USDT para operar
    MIN_VOLUME_USDT_FOR_SELECTION = 20_000_000 # M√≠nimo 20M USDT volume 24h

    # üîÑ CONTROLE DE FREQU√äNCIA
    KLINES_UPDATE_INTERVAL_SECONDS = 15     
    CYCLE_INTERVAL_SECONDS = 120         # Ciclos a cada 2 minutos
    # MAX_DAILY_TRADES = 3                 # Not directly used by main.py but good to keep for reference
    # MAX_HOURLY_TRADES = 1                # Not directly used by main.py but good to keep for reference

    # üõ°Ô∏è S√çMBOLOS ULTRA-SEGUROS (apenas os mais est√°veis)
    MANUAL_SYMBOLS = [ # Override MANUAL_SYMBOLS for ultra safe mode
        'BTC_USDT', 'ETH_USDT', 'BNB_USDT'
    ]

    # üö´ S√çMBOLOS PROIBIDOS (alta volatilidade/risco)
    EXCLUDED_SYMBOLS = [ # Directly defining here to override or complement
        'USDC_USDT', 'BUSD_USDT', 'DAI_USDT', 'TUSD_USDT', 'USDD_USDT', 'FRAX_USDT', 
        'LUNA_USDT', 'UST_USDT', 'FTT_USDT', 
        'SHIB_USDT', 'PEPE_USDT', 'DOGE_USDT', 'FLOKI_USDT', # Memecoins
        'APE_USDT', 'SAND_USDT', 'MANA_USDT', # Altcoins vol√°teis
        'YFI_USDT', 'SUSHI_USDT', 'CAKE_USDT', # DeFi de alto risco
        'BTT_USDT', 'WIN_USDT', 'SUN_USDT' # Baixa liquidez Gate.io
    ]

    # üìà INDICADORES T√âCNICOS CONSERVADORES (aplicados no STRATEGY_CONFIG base)
    TECHNICAL_INDICATORS = {
        'ema_fast': 20, 'ema_slow': 50, 'rsi_period': 21,
        'rsi_oversold': 25, 'rsi_overbought': 75,
        'bb_period': 30, 'bb_std': 2.5,
        'volume_threshold': 1.5,
        'trend_confirmation': 3
    }
    
    # üîí CONFIGURA√á√ïES DE ALAVANCAGEM
    MAX_LEVERAGE = 1.0           
    LEVERAGE_FORBIDDEN = True    # Keep this if it triggers specific logic elsewhere

    # ‚è∞ HOR√ÅRIOS DE OPERA√á√ÉO (UTC)
    TRADING_HOURS = {
        'start_hour': 0,         
        'end_hour': 23,          
        'weekend_trading': True  
    }

    # üìä AN√ÅLISE DE MERCADO
    MARKET_ANALYSIS = {
        'min_data_points': 200,   
        'volatility_window': 30,  
        'trend_window': 50,       
        'volume_window': 20       
    }

    # üõ°Ô∏è SISTEMA DE ALERTAS
    ALERTS = {
        'telegram_enabled': True,     
        'email_enabled': False,        
        'log_level': 'INFO', # Adjusted for ULTRA_SAFE_MODE, to reduce debug logs
        'emergency_contacts': []       
    }
    LOG_LEVEL = ALERTS['log_level'] # Make sure global LOG_LEVEL is updated

    # üíæ BACKUP E LOGS
    BACKUP_CONFIG = {
        'save_trades': True,           
        'save_positions': True,        
        'log_rotation': True,          
        'max_log_files': 30,          
        'backup_interval_hours': 6     
    }

    # üÜò CONFIGURA√á√ïES DE EMERG√äNCIA
    EMERGENCY_CONFIG = {
        'auto_close_on_loss': True,        
        'close_all_on_emergency': True,    
        'emergency_cooldown_hours': 24,    
        'max_emergency_stops': 3,          
        'notify_on_emergency': True        
    }

    # üì± CONFIGURA√á√ïES DA API
    API_CONFIG = {
        'timeout_seconds': 30,         
        'max_retries': 3,             
        'retry_delay_seconds': 5,     
        'rate_limit_per_minute': 30   
    }

    # üéØ METAS CONSERVADORAS
    TARGETS = {
        'daily_profit_target': 0.5,    
        'weekly_profit_target': 2.0,   
        'monthly_profit_target': 8.0,  
        'max_acceptable_loss': -1.0    
    }
    
    # Overwrite STRATEGY_CONFIG with ULTRA_SAFE values (recommended)
    STRATEGY_CONFIG['max_portfolio_risk'] = MAX_TOTAL_RISK_PERCENT / 100.0
    STRATEGY_CONFIG['max_single_position'] = MAX_POSITION_SIZE_PERCENT / 100.0
    STRATEGY_CONFIG['max_leverage'] = MAX_LEVERAGE
    STRATEGY_CONFIG['take_profit_ratio'] = TAKE_PROFIT_PERCENT / 100.0
    STRATEGY_CONFIG['stop_loss_ratio'] = STOP_LOSS_PERCENT / 100.0
    STRATEGY_CONFIG['min_confidence_to_trade'] = MIN_CONFIDENCE_TO_TRADE # Ensure this is also passed

    # Override SL/TP settings for ImprovedSLTPManager in ULTRA_SAFE_MODE
    STOP_LOSS_PCT = STOP_LOSS_PERCENT
    TAKE_PROFIT_PCT = TAKE_PROFIT_PERCENT
    EMERGENCY_SL_PCT = EMERGENCY_LOSS_PERCENT # Using the emergency loss for SL
    EMERGENCY_TP_PCT = TAKE_PROFIT_PERCENT * 1.5 # Example: higher TP for emergency
    TRAILING_STOP_ENABLED = False # Disable trailing stop in ultra safe mode for simplicity/control
    BREAKEVEN_ENABLED = True
    TRAILING_STOP_DISTANCE = 0.5 # Smaller distance if enabled
    MAX_CLOSE_RETRIES = 5 # More retries for critical closures
    QUICK_PROFIT_FOR_BREAKEVEN = 0.5 # Move to breakeven quicker

# üìã VALIDA√á√ïES GLOBAIS (apenas se este arquivo for executado diretamente)
def validate_config():
    """Valida algumas configura√ß√µes para garantir consist√™ncia."""
    
    validations = []
    
    if ULTRA_SAFE_MODE:
        if MAX_CONCURRENT_POSITIONS > 3:
            validations.append("‚ö†Ô∏è MAX_CONCURRENT_POSITIONS √© alto demais para ULTRA_SAFE_MODE (recomenda-se <= 3).")
        if abs(STOP_LOSS_PERCENT) < 0.5: # Stop loss muito apertado
            validations.append("‚ö†Ô∏è STOP_LOSS_PERCENT pode ser muito apertado, pode causar whipsaws.")
        if MIN_CONFIDENCE_TO_TRADE < 70.0: # Changed from MIN_CONFIDENCE_REQUIRED
            validations.append("‚ö†Ô∏è MIN_CONFIDENCE_TO_TRADE baixo demais para ULTRA_SAFE_MODE.")
        if MAX_LEVERAGE > 1.0:
            validations.append("‚ö†Ô∏è MAX_LEVERAGE > 1.0 detectado em ULTRA_SAFE_MODE.")
        
    else: # Modo padr√£o/mais flex√≠vel
        if MAX_CONCURRENT_POSITIONS < 1:
            validations.append("‚ö†Ô∏è MAX_CONCURRENT_POSITIONS deve ser pelo menos 1.")
        
    if MIN_VOLUME_USDT_FOR_SELECTION < 1_000_000:
        validations.append("‚ö†Ô∏è MIN_VOLUME_USDT_FOR_SELECTION baixo. Pode selecionar ativos pouco l√≠quidos.")
    if MIN_NOTIONAL_FOR_SELECTION < 10.0:
        validations.append("‚ö†Ô∏è MIN_NOTIONAL_FOR_SELECTION baixo. Pode gerar ordens muito pequenas.")

    if validations:
        print("\n--- AVISOS DE CONFIGURA√á√ÉO ---")
        for msg in validations:
            print(msg)
        print("----------------------------")
        return False
    else:
        print("\n‚úÖ Configura√ß√µes validadas. Tudo pronto!")
        return True

# üìä RESUMO DAS CONFIGURA√á√ïES (apenas se este arquivo for executado diretamente)
def print_config_summary():
    """Imprime um resumo das configura√ß√µes atuais."""
    
    print("\n=== RESUMO DAS CONFIGURA√á√ïES ATUAIS ===")
    print(f"Modo ULTRA_SAFE: {'ATIVO' if ULTRA_SAFE_MODE else 'DESATIVADO'}")
    print(f"Intervalo de Ciclo: {CYCLE_INTERVAL_SECONDS}s")
    print(f"M√°x. Falhas Consecutivas: {MAX_CONSECUTIVE_FAILURES}")
    print(f"Volume M√≠n. P/ Sele√ß√£o: {MIN_VOLUME_USDT_FOR_SELECTION:,.0f} USDT")
    print(f"Notional M√≠n. P/ Sele√ß√£o: {MIN_NOTIONAL_FOR_SELECTION:.1f} USDT")
    print(f"M√°x. S√≠mbolos P/ An√°lise: {MAX_SYMBOLS_TO_ANALYZE}")
    print(f"S√≠mbolos Exclu√≠dos (base): {len(EXCLUDED_SYMBOLS)}")
    print(f"SL/TP padr√£o estrat√©gia: {STRATEGY_CONFIG['stop_loss_ratio']*100:.2f}% / {STRATEGY_CONFIG['take_profit_ratio']*100:.2f}%")
    print(f"M√°x. Posi√ß√µes Concorrentes: {MAX_CONCURRENT_POSITIONS}")
    print(f"M√°x. Alavancagem: {MAX_LEVERAGE}x")
    print(f"Hor√°rio de Opera√ß√£o: {TRADING_HOURS['start_hour']}h-{TRADING_HOURS['end_hour']}h UTC (Fim de Semana: {TRADING_HOURS['weekend_trading']})")
    print("=" * 50)
    # VERIFICA√á√ÉO TEMPOR√ÅRIA
    print(f"üìä CONFIG CARREGADO: MAX_CONCURRENT_POSITIONS = {MAX_CONCURRENT_POSITIONS}")
    print(f"üìä CONFIG CARREGADO: MAX_TOTAL_RISK_PERCENT = {MAX_TOTAL_RISK_PERCENT}")

if __name__ == "__main__":
    print_config_summary()
    validate_config()